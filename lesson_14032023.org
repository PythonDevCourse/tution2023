#+title: Lesson_14032023

* Занятие 14 марта 2023
** Домашнее задание (задача с преобразованием списка в строку)

*** Алгоритм задачи и ее реализация

#+begin_quote
[1,3,5] => "113" -> "1,3,5"

[8,6,3,1,9,2] => [1,2,3,6,8,9]

[1-3,6,8-9] или [1-3,6,8,9]
#+end_quote

Дано список L

1) Если L - это пустой список, то возвращаем пустую строку
2) Отсортировать список L
3) Записываем первый элемент списка в переменную PREV
4) Задаем строку в которую печатаем первый элемент списка
5) Запускаем цикл по каждому элементу списка L, начиная со второго элемента, текущий элемент списка будет в переменной I
   a) Если I - PREV == 1, то мы присваиваем PREV значение I и переходим к следующему элементу
   b) Если I - PREV != 1, то мы выводим "," и I присваиваем PREV значение I и переходим к следующему элементу

#+begin_src python
def compact(L):
    if  L == []:
        return ""
    elif L is None:
        return ""
    L = sorted(L)
    prev = L[0]
    out_str = str(prev)
    for i in L[1:]:
        if i - prev == 1:
            prev = i
            continue
        if i - prev != 1:
            out_str = out_str + "-" + str(prev) + "," + str(i)
            prev = i
    return out_str


return compact([2,4,5,6])

#+end_src

#+RESULTS:
: 2-2,4

**** Исключительные ситуации для алгоритма

1) Пустой список []
2) Вместо списка None

*** Докстринги и доктесты

https://docs.python.org/3/library/doctest.html

Написали для функции из домашнего задания доктесты на уровне модуля и на уровне
функции. Проверили работу.

*** Фильтрация в ORM Django

Краткая демонстрация работы функции filter в рамках QuerySet'а в Django.
Продолжим на следующих уроках. Ссылка на документацию:
https://docs.djangoproject.com/en/4.1/ref/models/querysets/ и особенно пункт о
реализации сложных выборок:
https://docs.djangoproject.com/en/4.1/topics/db/queries/#complex-lookups-with-q
